import java.io.BufferedReader;
import java.io.FileReader;

/**
 * 
 */

/**
 * @author Kwon
 *
 */
public class Sort {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String line;
		String everything = null;
		String selectionSort = null;
		
		try (BufferedReader br = new BufferedReader(new FileReader ("C:\\Users\\Kwon\\workspace\\SAQ\\Sort\\input.txt"))){
			StringBuilder sb = new StringBuilder();
			
			while( (line = br.readLine()) != null) {
				System.out.println(line);
				sb.append(line);
				sb.append(System.lineSeparator());
			}
			everything = sb.toString();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		if (everything == null) {
			System.out.println("Sort.java :: main() :: No strings read from input.txt thus HALTing....");
			return;
		}
		
		System.out.println("Sort.java :: main() :: Selection Sort : " +  verifyResult());
		
		
	}

	private static boolean verifyResult() {
		String output = "output";
		String expectedOutput = "expectedOutput";
		String line = null;
		
		try (BufferedReader br = new BufferedReader(new FileReader ("C:\\Users\\Kwon\\workspace\\SAQ\\Sort\\output.txt"))){
			StringBuilder sb = new StringBuilder();
			
			while( (line = br.readLine()) != null) {
				System.out.println(line);
				sb.append(line);
				sb.append(System.lineSeparator());
			}
			output = sb.toString();
			System.out.println("Sort.java :: verifyResult() :: output = " + output);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		try (BufferedReader br = new BufferedReader(new FileReader ("C:\\Users\\Kwon\\workspace\\SAQ\\Sort\\expected_output.txt"))){
			StringBuilder sb = new StringBuilder();
			
			while( (line = br.readLine()) != null) {
				System.out.println(line);
				sb.append(line);
				sb.append(System.lineSeparator());
			}
			expectedOutput = sb.toString();
			System.out.println("Sort.java :: verifyResult() :: expected_output = " + expectedOutput);			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return output.equals(expectedOutput);
	}
}
